<div class="mt-12 relative p-4 pt-8 border border-gray-900/10 dark:border-gray-100/10 rounded"
     x-data="{
       title: '',
       subtitle: '',
       error: false,
       submitButton: 'Generate Image',
       executionDuration: 0,
       bufferToImageBase64(buffer) {
          var arrayBufferView = new Uint8Array( buffer );
          var blob = new Blob( [ arrayBufferView ], { type: 'image/png' } );
          return (window.URL || window.webkitURL).createObjectURL( blob );
       },
       submitForm() {
         const that = this;
         this.error = false
         this.submitButton = 'Generating an image...'
         this.executionDuration = 0
         let timer = performance.now()
         try {
           axios.get('/.netlify/functions/open-graph-image-generator-v2/', {
             params: { title: this.title||`Hello World!`, subtitle: this.subtitle||`serverless-gems.com` },
             responseType: 'arraybuffer'
           }).then((response) => {
             that.executionDuration = (performance.now() - timer).toFixed(2)
             console.log(`Request took ${this.executionDuration}ms`)
             console.log(response)
             if (response.status !== 200) {
               that.error = true
               that.prismJson(response.data)
               that.submitButton = 'Generate Image'
               return
             }
             const img = document.createElement('img');
             img.decoding = 'async';
             img.loading = 'lazy';
             img.alt = 'Open Graph Image';
             img.classList.add('w-full','h-auto','rounded','aspect-og');
             img.src = that.bufferToImageBase64(response.data);
             that.$refs.resultImg.innerHTML = img.outerHTML;
             that.submitButton = 'Generate Image'
           }).catch((error) => {
             console.error(error)
             that.error = true
             that.executionDuration = (performance.now() - timer).toFixed(2)
             that.prismJson({
                status: error.response.status,
                statusText: error.message,
                message: `Error capturing screenshot for ${that.url}`,
                note: 'This is a known issue with the screenshot service. Please try again.'
             }, 'responseJson')
             that.submitButton = 'Generate Image'
           })
         } catch (error) {
           console.error(error)
           that.error = true
           that.executionDuration = (performance.now() - timer).toFixed(2)
           that.prismJson(error, 'responseJson')
           that.submitButton = 'Generate Image'
         }
       }
     }">
  <form action="/.netlify/functions/open-graph-image-generator-v2/"
        method="GET"
        @submit.prevent="submitForm()"
        class="mb-8">
    <fieldset class="mb-4">
      <legend class="absolute -top-12 bg-zinc-50 dark:bg-zinc-900 m-0 leading-none">
        <h2 class="text-xl inline m-0 p1">Test how it works</h2>
      </legend>
      <label for="title">Type any text as a title:</label>
      <input type="text" id="title" name="title" x-model="title" placeholder="Hello World!">
      <label for="subtitle">Type any text as a subtitle:</label>
      <input type="text" id="subtitle" name="subtitle" x-model="subtitle" placeholder="example.com">
    </fieldset>
    <input type="submit" :value="submitButton" value="Generate image">
  </form>

  <div class="relative">
    <span class="absolute -top-5 right-1 text-xs" x-cloak x-show="executionDuration">
      Execution Duration: <span x-text="executionDuration">0</span>ms
    </span>
    <pre id="responseJson" class="language-json" x-show="error">
      {# Silence is golden #}
    </pre>
    <div id="resultImg" x-ref="resultImg" x-show="executionDuration && !error">
      {# Silence is golden #}
    </div>
    <a :href="`${location.protocol}//${location.host}/.netlify/functions/open-graph-image-generator-v2/?title=${encodeURIComponent(title||'Hello World!')}&subtitle=${encodeURIComponent(subtitle||'serverless-gems.com')}`"
       x-show="executionDuration && !error"
       target="_blank"
       class="inline-block mt-2">
      Open image in new tab
    </a>
  </div>
</div>
